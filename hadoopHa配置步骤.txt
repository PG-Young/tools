hadoop  HA 步骤
1、在opt/module 下mkdir  ha    cp hadoop-2.7.2到ha   删除原有的data logs
2、配置hadoop-env.sh 的export  JAVA_HOME 
3、修改配置文件core-site  
<configuration>
<!-- 把两个NameNode）的地址组装成一个集群mycluster -->
		<property>
			<name>fs.defaultFS</name>
        	<value>hdfs://mycluster</value>
		</property>

		<!-- 指定hadoop运行时产生文件的存储目录 -->
		<property>
			<name>hadoop.tmp.dir</name>
			<value>/opt/module/ha/hadoop-2.7.2/data/tmp</value>
		</property>
</configuration>
4、配置hdfs-site
<configuration>
	<!-- 完全分布式集群名称 -->
	<property>
		<name>dfs.nameservices</name>
		<value>mycluster</value>
	</property>

	<!-- 集群中NameNode节点都有哪些 -->
	<property>
		<name>dfs.ha.namenodes.mycluster</name>
		<value>nn1,nn2</value>
	</property>

	<!-- nn1的RPC通信地址 -->
	<property>
		<name>dfs.namenode.rpc-address.mycluster.nn1</name>
		<value>hadoop101:9000</value>
	</property>

	<!-- nn2的RPC通信地址 -->
	<property>
		<name>dfs.namenode.rpc-address.mycluster.nn2</name>
		<value>hadoop102:9000</value>
	</property>

	<!-- nn1的http通信地址 -->
	<property>
		<name>dfs.namenode.http-address.mycluster.nn1</name>
		<value>hadoop101:50070</value>
	</property>

	<!-- nn2的http通信地址 -->
	<property>
		<name>dfs.namenode.http-address.mycluster.nn2</name>
		<value>hadoop102:50070</value>
	</property>

	<!-- 指定NameNode元数据在JournalNode上的存放位置 -->
	<property>
		<name>dfs.namenode.shared.edits.dir</name>
	<value>qjournal://hadoop101:8485;hadoop102:8485;hadoop103:8485/mycluster</value>
	</property>

	<!-- 配置隔离机制，即同一时刻只能有一台服务器对外响应 -->
	<property>
		<name>dfs.ha.fencing.methods</name>
		<value>sshfence</value>
	</property>

	<!-- 使用隔离机制时需要ssh无秘钥登录-->
	<property>
		<name>dfs.ha.fencing.ssh.private-key-files</name>
		<value>/home/atguigu/.ssh/id_rsa</value>
	</property>

	<!-- 声明journalnode服务器存储目录-->
	<property>
		<name>dfs.journalnode.edits.dir</name>
		<value>/opt/module/ha/hadoop-2.7.2/data/jn</value>
	</property>

	<!-- 关闭权限检查-->
	<property>
		<name>dfs.permissions.enable</name>
		<value>false</value>
	</property>

	<!-- 访问代理类：client，mycluster，active配置失败自动切换实现方式-->
	<property>
  		<name>dfs.client.failover.proxy.provider.mycluster</name>
	<value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
	</property>
</configuration>
 5、先启动数据存放的JournalNode 服务	sbin/hadoop-daemons.sh start journalnode
 6、在nn1上格式化一次即可，bin/hdfs namenode  -format
 7、启动namenode   	sbin/hadoop-daemon.sh start namenode
 8、在nn2上同步nn1的元数据	bin/hdfs namenode -bootstrapStandby
 9、启动namenode  	sbin/hadoop-daemon.sh start namenode
 10、启动所有的datanode   	sbin/hadoop-daemons.sh start datanode
 11、将nn1切换为Active 	bin/hdfs haadmin -transitionToActive nn1
 12、查看是否active   	bin/hdfs haadmin -getServiceState nn1
 ===============================================
                HDFS -HA 自动故障转
1、停掉服务sbin/stop-dfs.sh
2、在hdfs-site中添加
<property>
	<name>dfs.ha.automatic-failover.enabled</name>
	<value>true</value>
</property>
3、在core-site中添加
<property>
	<name>ha.zookeeper.quorum</name>
	<value>hadoop101:2181,hadoop102:2181,hadoop103:2181</value>
</property>
        xsync etc 发送给其他机器
4、启动zookeeper集群   /opt/module/zookeeper-3.4.10/bin/zkServer.sh start
5、初始化HA在Zookeeper中的状态  bin/hdfs zkfc -formatZK  创建hadoop-ha的父级目录
6、启动HDFS服务sbin/start-dfs.sh
7、验证 将active  namenode进程kill   kill  -9 namenode 进程id
    将active  Namenode机器断开网络   service  network stop 
    
    bin/zkCli.sh
    bin/zkServer.sh status
=====================================================
                yarn的HA配置
1、修改yarn-site文件<configuration>

    <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
    </property>

    <!--启用resourcemanager ha-->
    <property>
        <name>yarn.resourcemanager.ha.enabled</name>
        <value>true</value>
    </property>
 
    <!--声明两台resourcemanager的地址-->
    <property>
        <name>yarn.resourcemanager.cluster-id</name>
        <value>cluster-yarn1</value>
    </property>

    <property>
        <name>yarn.resourcemanager.ha.rm-ids</name>
        <value>rm1,rm2</value>
    </property>

    <property>
        <name>yarn.resourcemanager.hostname.rm1</name>
        <value>hadoop101</value>
    </property>

    <property>
        <name>yarn.resourcemanager.hostname.rm2</name>
        <value>hadoop102</value>
    </property>
 
    <!--指定zookeeper集群的地址--> 
    <property>
        <name>yarn.resourcemanager.zk-address</name>
        <value>hadoop101:2181,hadoop102:2181,hadoop103:2181</value>
    </property>

    <!--启用自动恢复--> 
    <property>
        <name>yarn.resourcemanager.recovery.enabled</name>
        <value>true</value>
    </property>
 
    <!--指定resourcemanager的状态信息存储在zookeeper集群--> 
    <property>
        <name>yarn.resourcemanager.store.class</name>     <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
</property>
</configuration>
2、同步etc的配置
3、启动yarn   sbin/start-yarn.sh
4、在102中启动resourcemanage  sbin/yarn-daemon.sh start resourcemanager
5、查看服务状态  bin/yarn rmadmin -getServiceState  rm1


